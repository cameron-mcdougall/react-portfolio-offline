{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\44799\\\\Documents\\\\Code\\\\cameron-mcdougall\\\\react-portfolio\\\\client\\\\src\\\\RecaptchaTestComponent.js\";\nimport React from 'react';\nimport { ReCaptcha } from 'react-recaptcha-google';\n\nclass RecaptchaTestComponent extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.onLoadRecaptcha = this.onLoadRecaptcha.bind(this);\n    this.verifyCallback = this.verifyCallback.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.formCaptcha) {\n      console.log(\"started, just a second...\");\n      this.formCaptcha.reset();\n      this.formCaptcha.execute();\n    }\n  }\n\n  onLoadRecaptcha() {\n    if (this.formCaptcha) {\n      this.formCaptcha.reset();\n      this.formCaptcha.execute();\n    }\n  }\n\n  verifyCallback(recaptchaToken) {\n    // Here you will get the final recaptchaToken!!!  \n    console.log(recaptchaToken, \"<= your recaptcha token\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ReCaptcha, {\n      ref: el => {\n        this.formCaptcha = el;\n      },\n      size: \"invisible\",\n      render: \"explicit\",\n      sitekey: \"6LfjLuQUAAAAAETa6GmzKC3ZH3mc8Wp-dudnV9yv\",\n      onloadCallback: this.onLoadRecaptcha,\n      verifyCallback: this.verifyCallback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n;\nexport default RecaptchaTestComponent;","map":{"version":3,"sources":["C:/Users/44799/Documents/Code/cameron-mcdougall/react-portfolio/client/src/RecaptchaTestComponent.js"],"names":["React","ReCaptcha","RecaptchaTestComponent","Component","constructor","props","context","onLoadRecaptcha","bind","verifyCallback","componentDidMount","formCaptcha","console","log","reset","execute","recaptchaToken","render","el"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AAGA,MAAMC,sBAAN,SAAqCF,KAAK,CAACG,SAA3C,CAAqD;AAEnDC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKC,WAAT,EAAsB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,WAAKF,WAAL,CAAiBG,KAAjB;AACA,WAAKH,WAAL,CAAiBI,OAAjB;AACH;AACF;;AAEDR,EAAAA,eAAe,GAAG;AACd,QAAI,KAAKI,WAAT,EAAsB;AAClB,WAAKA,WAAL,CAAiBG,KAAjB;AACA,WAAKH,WAAL,CAAiBI,OAAjB;AACH;AACJ;;AAEDN,EAAAA,cAAc,CAACO,cAAD,EAAiB;AAC7B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,cAAZ,EAA4B,yBAA5B;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,SAAD;AACI,MAAA,GAAG,EAAGC,EAAD,IAAQ;AAAC,aAAKP,WAAL,GAAmBO,EAAnB;AAAuB,OADzC;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,MAAM,EAAC,UAHX;AAII,MAAA,OAAO,EAAC,0CAJZ;AAKI,MAAA,cAAc,EAAE,KAAKX,eALzB;AAMI,MAAA,cAAc,EAAE,KAAKE,cANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAaD;;AA1CkD;;AA2CpD;AAED,eAAeP,sBAAf","sourcesContent":["import React from 'react';\r\nimport { ReCaptcha } from 'react-recaptcha-google';\r\n\r\n\r\nclass RecaptchaTestComponent extends React.Component {\r\n  \r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.onLoadRecaptcha = this.onLoadRecaptcha.bind(this);\r\n    this.verifyCallback = this.verifyCallback.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.formCaptcha) {\r\n        console.log(\"started, just a second...\")\r\n        this.formCaptcha.reset();\r\n        this.formCaptcha.execute();\r\n    }\r\n  }\r\n\r\n  onLoadRecaptcha() {\r\n      if (this.formCaptcha) {\r\n          this.formCaptcha.reset();\r\n          this.formCaptcha.execute();\r\n      }\r\n  }\r\n\r\n  verifyCallback(recaptchaToken) {\r\n    // Here you will get the final recaptchaToken!!!  \r\n    console.log(recaptchaToken, \"<= your recaptcha token\")\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* You can replace captchaDemo with any ref word */}\r\n        <ReCaptcha\r\n            ref={(el) => {this.formCaptcha = el;}}\r\n            size=\"invisible\"\r\n            render=\"explicit\"\r\n            sitekey=\"6LfjLuQUAAAAAETa6GmzKC3ZH3mc8Wp-dudnV9yv\"\r\n            onloadCallback={this.onLoadRecaptcha}\r\n            verifyCallback={this.verifyCallback}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default RecaptchaTestComponent;"]},"metadata":{},"sourceType":"module"}