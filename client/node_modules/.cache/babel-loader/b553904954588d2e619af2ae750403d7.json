{"ast":null,"code":"import _defineProperty from\"C:/Users/44799/Documents/Code/cameron-mcdougall/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"C:/Users/44799/Documents/Code/cameron-mcdougall/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/44799/Documents/Code/cameron-mcdougall/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:/Users/44799/Documents/Code/cameron-mcdougall/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/44799/Documents/Code/cameron-mcdougall/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/Users/44799/Documents/Code/cameron-mcdougall/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/Users/44799/Documents/Code/cameron-mcdougall/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/44799/Documents/Code/cameron-mcdougall/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./Contact.css';import axios from'axios';import Form from'./Form';import FormPreview from'./FormPreview';var validEmailRegex=RegExp(/^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i);var validateForm=function validateForm(errors){var valid=true;Object.values(errors).forEach(// If an error string exists, set valid to false\nfunction(val){return val.length>0&&(valid=false);});return valid;};var Contact=/*#__PURE__*/function(_React$Component){_inherits(Contact,_React$Component);var _super=_createSuper(Contact);function Contact(props){var _this;_classCallCheck(this,Contact);_this=_super.call(this,props);_this.callApi=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,body;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('/.netlify/functions/server/api/hello');case 2:response=_context.sent;_context.next=5;return response.json();case 5:body=_context.sent;if(!(response.status!==200)){_context.next=8;break;}throw Error(body.message);case 8:return _context.abrupt(\"return\",body);case 9:case\"end\":return _context.stop();}}},_callee);}));_this.handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var response,body;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:e.preventDefault();if(!validateForm(_this.state.errors)){_context2.next=11;break;}_context2.next=4;return fetch('/.netlify/functions/server/api/world',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name:_this.state.name,email:_this.state.email,number:_this.state.number,message:_this.state.message})});case 4:response=_context2.sent;_context2.next=7;return response.json();case 7:body=_context2.sent;_this.setState({responseToPost:body.msg,responseToPostStatus:body.code});console.log(_this.state.responseToPostStatus);setTimeout(function(){if(_this.state.responseToPostStatus===200){_this.resetForm();}else{return null;}},5000);case 11:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x){return _ref2.apply(this,arguments);};}();_this.state={name:'',email:'',number:'',message:'',preview:true,errors:{name:'',email:'',number:'',message:''},response:'',post:'',responseToPost:'',responseToPostStatus:''};_this.updateInputChange=_this.updateInputChange.bind(_assertThisInitialized(_this));_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));_this.togglePreview=_this.togglePreview.bind(_assertThisInitialized(_this));_this.resetForm=_this.resetForm.bind(_assertThisInitialized(_this));return _this;}_createClass(Contact,[{key:\"updateInputChange\",value:function updateInputChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;var errors=this.state.errors;switch(name){case'name':errors.name=value.length<3?'Name must be at least 3 characters long':'';break;case'email':errors.email=validEmailRegex.test(value)?'':'Not a valid email address';break;case'number':errors.number=value.length<11?'Must contain at least 11 numbers':'';break;case'message':errors.message=value.length>500?'Too many characters, please keep your message under 500 characters':'';break;default:break;}this.setState(_defineProperty({errors:errors},name,value));}// New Code\n},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.callApi().then(function(res){return _this2.setState({response:res.express});}).catch(function(err){return console.log(err);});}},{key:\"resetForm\",/*handleSubmit(event) {\n\n\t\tevent.preventDefault();\n\n\t\tif (validateForm(this.state.errors)) {\n\t\t\tconsole.info('Valid Form');\n\t\t\taxios({\n\t\t\tmethod: 'POST',\n\t\t\turl: 'http://localhost:3000/send',\n\t\t\tdata: {\n\t\t\t\tname: this.state.name,\n\t\t\t\temail: this.state.email,\n\t\t\t\tnumber: this.state.number,\n\t\t\t\tmessage: this.state.message \n\t\t\t}\n\t\t}).then((response) => {\n\t\t\tif (response.data.msg === 'success') {\n\t\t\t\talert('Email sent, awesome!');\n\t\t\t\tthis.resetForm()\n\t\t\t} else if (response.data.msg === 'fail') {\n\t\t\t\talert('Oops, something went wrong. Try again')\n\t\t\t}\n\t\t})\n\t\t} else {\n\n\t\t}\n\t\t\n\t}*/value:function resetForm(){this.setState({name:'',email:'',number:'',message:'',errors:{name:'',email:'',number:'',message:''}});}},{key:\"togglePreview\",value:function togglePreview(event){this.state.preview===true?this.setState({preview:false}):this.setState({preview:true});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"section\",{className:\"intro\"},/*#__PURE__*/React.createElement(\"p\",null,\"I'm only ever a few keystrokes and one bot check away so feel free to send me a message if you'd be interested in working with me! I've included a message preview that was originally me flexing at ReactJS states but found it's actually quite nice for proofreading before sending! Fun, eh?\"),/*#__PURE__*/React.createElement(\"p\",{className:\"mail-server-status\"},this.state.response)),/*#__PURE__*/React.createElement(\"section\",{className:\"form-wrap\"},/*#__PURE__*/React.createElement(Form,{prev:this.state,handleChange:this.updateInputChange.bind(this),handleSubmit:this.handleSubmit.bind(this),togglePreview:this.togglePreview.bind(this),sendState:this.state.responseToPost}),/*#__PURE__*/React.createElement(FormPreview,{prev:this.state})));}}]);return Contact;}(React.Component);export default Contact;","map":{"version":3,"sources":["C:/Users/44799/Documents/Code/cameron-mcdougall/react-portfolio/client/src/Contact.js"],"names":["React","axios","Form","FormPreview","validEmailRegex","RegExp","validateForm","errors","valid","Object","values","forEach","val","length","Contact","props","callApi","fetch","response","json","body","status","Error","message","handleSubmit","e","preventDefault","state","method","headers","JSON","stringify","name","email","number","setState","responseToPost","msg","responseToPostStatus","code","console","log","setTimeout","resetForm","preview","post","updateInputChange","bind","togglePreview","event","target","value","test","then","res","express","catch","err","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Contact.css';\nimport axios from 'axios';\nimport Form from './Form';\nimport FormPreview from './FormPreview';\n\nconst validEmailRegex = RegExp(/^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i);\nconst validateForm = (errors) => {\n\tlet valid = true;\n\tObject.values(errors).forEach(\n\t\t// If an error string exists, set valid to false\n\t\t(val) => val.length > 0 && (valid = false)\n\t);\n\treturn valid;\t\n}\n\nclass Contact extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tname: '',\n\t\t\temail: '',\n\t\t\tnumber: '',\n\t\t\tmessage: '',\n\t\t\tpreview: true,\n\t\t\terrors: {\n\t\t\t\tname: '',\n\t\t\t\temail: '',\n\t\t\t\tnumber: '',\n\t\t\t\tmessage: ''\n\t\t\t},\n\t\t\tresponse: '',\n    \t\tpost: '',\n   \t\t\tresponseToPost: '',\n   \t\t\tresponseToPostStatus: ''\n\t\t};\n\n\t\tthis.updateInputChange = this.updateInputChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.togglePreview = this.togglePreview.bind(this);\n\t\tthis.resetForm = this.resetForm.bind(this);\n\n\t}\n\n\tupdateInputChange(event) {\n\n\t\tconst { name, value } = event.target;\n\t\tlet errors = this.state.errors;\n\n\t\tswitch(name) {\n\t\t\tcase 'name':\n\t\t\t\terrors.name = value.length < 3 ? 'Name must be at least 3 characters long' : '';\n\t\t\tbreak;\n\t\t\tcase 'email':\n\t\t\t\terrors.email = validEmailRegex.test(value) ? '' : 'Not a valid email address';\n\t\t\tbreak;\n\t\t\tcase 'number':\n\t\t\t\terrors.number = value.length < 11 ? 'Must contain at least 11 numbers' : '';\n\t\t\tbreak;\n\t\t\tcase 'message':\n\t\t\t\terrors.message = value.length > 500 ? 'Too many characters, please keep your message under 500 characters' : '';\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.setState({\n\t\t\terrors, [name]: value\n\t\t});\n\n\t}\n\n\t// New Code\n\t\n\tcomponentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err));\n  \t}\n\t\n\tcallApi = async () => {\n  \t\tconst response = await fetch('/.netlify/functions/server/api/hello');\n  \t\tconst body = await response.json();\n\n  \t\tif (response.status !== 200) throw Error(body.message);\n\n  \t\treturn body;\n\t};\n\n\thandleSubmit = async e => {\n\t\t\n\t\te.preventDefault();\n\t\t\n\t\tif (validateForm(this.state.errors)) {\n\t\t\tconst response = await fetch('/.netlify/functions/server/api/world', {\n\t\t\t\tmethod: 'POST',\n    \t\t\theaders: {\n      \t\t\t\t'Content-Type': 'application/json',\n    \t\t\t},\n    \t\t\tbody: JSON.stringify({\n    \t\t\t\tname: this.state.name,\n    \t\t\t\temail: this.state.email,\n    \t\t\t\tnumber: this.state.number,\n    \t\t\t\tmessage: this.state.message\n    \t\t\t}),\n  \t\t\t});\n  \t\t\n  \t\t\n  \t\t\tconst body = await response.json();\n  \t\t\tthis.setState({ \n\t\t\t\tresponseToPost: body.msg,\n  \t\t\t\tresponseToPostStatus: body.code, \n  \t\t\t});\n  \t\t\tconsole.log(this.state.responseToPostStatus);\n\n  \t\t\tsetTimeout(() => {\n  \t\t\t\tif (this.state.responseToPostStatus === 200) {\n  \t\t\t\t\tthis.resetForm()\n  \t\t\t\t} else { \n  \t\t\t\t\treturn null\n  \t\t\t\t}\n  \t\t\t}, 5000)\n  \t\t}\n\t}\n\n\t/*handleSubmit(event) {\n\n\t\tevent.preventDefault();\n\n\t\tif (validateForm(this.state.errors)) {\n\t\t\tconsole.info('Valid Form');\n\t\t\taxios({\n\t\t\tmethod: 'POST',\n\t\t\turl: 'http://localhost:3000/send',\n\t\t\tdata: {\n\t\t\t\tname: this.state.name,\n\t\t\t\temail: this.state.email,\n\t\t\t\tnumber: this.state.number,\n\t\t\t\tmessage: this.state.message \n\t\t\t}\n\t\t}).then((response) => {\n\t\t\tif (response.data.msg === 'success') {\n\t\t\t\talert('Email sent, awesome!');\n\t\t\t\tthis.resetForm()\n\t\t\t} else if (response.data.msg === 'fail') {\n\t\t\t\talert('Oops, something went wrong. Try again')\n\t\t\t}\n\t\t})\n\t\t} else {\n\n\t\t}\n\t\t\n\t}*/\n\n\tresetForm() {\n\t\tthis.setState({\n\t\t\tname: '',\n\t\t\temail: '',\n\t\t\tnumber: '',\n\t\t\tmessage: '',\n\t\t\terrors: {\n\t\t\t\tname: '',\n\t\t\t\temail: '',\n\t\t\t\tnumber: '',\n\t\t\t\tmessage: ''\n\t\t\t}\n\t\t})\n\t}\n\n\ttogglePreview(event) {\n\t\t(this.state.preview === true) ? \n\t\t\tthis.setState({preview: false}) : \n\t\t\tthis.setState({preview: true})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<section className='intro'>\n\t\t\t\t\t<p>I'm only ever a few keystrokes and one bot check away so feel free to send me a message if you'd be interested in working with me! I've included a message preview that was originally me flexing at ReactJS states but found it's actually quite nice for proofreading before sending! Fun, eh?</p>\n\t\t\t\t\t<p className='mail-server-status'>{this.state.response}</p>\n\t\t\t\t</section>\n\t\t\t\t\n\t\t\t\t<section className='form-wrap'>\n\t\t\t\t\t<Form\n\t\t\t\t\t\tprev={this.state}\n\t\t\t\t\t\thandleChange={this.updateInputChange.bind(this)}\n\t\t\t\t\t\thandleSubmit={this.handleSubmit.bind(this)} \n\t\t\t\t\t\ttogglePreview={this.togglePreview.bind(this)}\n\t\t\t\t\t\tsendState={this.state.responseToPost}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormPreview prev={this.state} />\n\t\t\t\t</section>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}