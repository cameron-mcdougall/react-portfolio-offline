{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\44799\\\\Documents\\\\Code\\\\cameron-mcdougall\\\\react-portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\44799\\\\Documents\\\\Code\\\\cameron-mcdougall\\\\react-portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\44799\\\\Documents\\\\Code\\\\cameron-mcdougall\\\\react-portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\44799\\\\Documents\\\\Code\\\\cameron-mcdougall\\\\react-portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\44799\\\\Documents\\\\Code\\\\cameron-mcdougall\\\\react-portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Route}from'react-router-dom';import Filter from'./FilterItems';import PortfolioItem from'./PortfolioItem';import ProjectDisplay from'./ProjectDisplay';import{portfolioElements}from'./Content';var PortfolioAssemble=/*#__PURE__*/function(_React$Component){_inherits(PortfolioAssemble,_React$Component);var _super=_createSuper(PortfolioAssemble);function PortfolioAssemble(props){var _this;_classCallCheck(this,PortfolioAssemble);_this=_super.call(this,props);_this.state={filter:''};_this.filterUpdate=_this.filterUpdate.bind(_assertThisInitialized(_this));return _this;}_createClass(PortfolioAssemble,[{key:\"filterUpdate\",value:function filterUpdate(event,type){this.setState({filter:type});}},{key:\"render\",value:function render(){var _this2=this;// Randomiser function\nvar shuffle=function shuffle(array){for(var i=array.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));// Random index from 0 to i\n// Swap elements array[i] and array[j] (using destructing assignmnet)\nvar _ref=[array[j],array[i]];array[i]=_ref[0];array[j]=_ref[1];}return array;};// Randomise and filter (is applicable) the projects\nvar shuffledPortfolio=this.state.filter==='All'?shuffle(portfolioElements):shuffle(portfolioElements).filter(function(work){return work.type.includes(_this2.state.filter);});// Map newly created projects array\nvar portfolioLinkAssembly=Object.keys(shuffledPortfolio).map(function(key){return/*#__PURE__*/React.createElement(PortfolioItem,{key:key,item:shuffledPortfolio[key],link:key});});// Map corrisponding Routes for PorjectDisplay\nvar portfolioItemAssembly=Object.keys(shuffledPortfolio).map(function(element){return/*#__PURE__*/React.createElement(Route,{key:element,path:shuffledPortfolio[element].id,render:function render(props){return/*#__PURE__*/React.createElement(ProjectDisplay,Object.assign({},props,{position:element,array:shuffledPortfolio}));}});});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Filter,{filterUpdate:this.filterUpdate.bind(this)}),portfolioLinkAssembly,portfolioItemAssembly);}}]);return PortfolioAssemble;}(React.Component);export default PortfolioAssemble;","map":{"version":3,"sources":["C:/Users/44799/Documents/Code/cameron-mcdougall/react-portfolio/client/src/PortfolioAssemble.js"],"names":["React","Route","Filter","PortfolioItem","ProjectDisplay","portfolioElements","PortfolioAssemble","props","state","filter","filterUpdate","bind","event","type","setState","shuffle","array","i","length","j","Math","floor","random","shuffledPortfolio","work","includes","portfolioLinkAssembly","Object","keys","map","key","portfolioItemAssembly","element","id","Component"],"mappings":"6+BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,KAAsB,kBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,OAASC,iBAAT,KAAkC,WAAlC,C,GAGMC,CAAAA,iB,kIAEL,2BAAYC,KAAZ,CAAmB,mDAClB,uBAAMA,KAAN,EAEA,MAAKC,KAAL,CAAa,CACZC,MAAM,CAAE,EADI,CAAb,CAIA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB,CAPkB,aASlB,C,gFAEYC,K,CAAOC,I,CAAM,CAEzB,KAAKC,QAAL,CAAc,CACbL,MAAM,CAAEI,IADK,CAAd,EAIA,C,uCAEQ,iBAER;AACA,GAAME,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,KAAK,CAAI,CACxB,IAAK,GAAIC,CAAAA,CAAC,CAAGD,KAAK,CAACE,MAAN,CAAe,CAA5B,CAA+BD,CAAC,CAAG,CAAnC,CAAsCA,CAAC,EAAvC,CAA2C,CAC1C,GAAIE,CAAAA,CAAC,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,IAAiBL,CAAC,CAAG,CAArB,CAAX,CAAR,CAA6C;AAE7C;AAH0C,SAInB,CAACD,KAAK,CAACG,CAAD,CAAN,CAAWH,KAAK,CAACC,CAAD,CAAhB,CAJmB,CAIzCD,KAAK,CAACC,CAAD,CAJoC,SAI/BD,KAAK,CAACG,CAAD,CAJ0B,SAK1C,CACD,MAAOH,CAAAA,KAAP,CACA,CARD,CAUA;AACA,GAAMO,CAAAA,iBAAiB,CAAG,KAAKf,KAAL,CAAWC,MAAX,GAAsB,KAAtB,CAA8BM,OAAO,CAACV,iBAAD,CAArC,CAA2DU,OAAO,CAACV,iBAAD,CAAP,CAA2BI,MAA3B,CAAkC,SAAAe,IAAI,QAAIA,CAAAA,IAAI,CAACX,IAAL,CAAUY,QAAV,CAAmB,MAAI,CAACjB,KAAL,CAAWC,MAA9B,CAAJ,EAAtC,CAArF,CAEA;AACA,GAAMiB,CAAAA,qBAAqB,CAAGC,MAAM,CAACC,IAAP,CAAYL,iBAAZ,EAA+BM,GAA/B,CAAmC,SAAAC,GAAG,qBAChE,oBAAC,aAAD,EAAe,GAAG,CAAEA,GAApB,CAAyB,IAAI,CAAEP,iBAAiB,CAACO,GAAD,CAAhD,CAAuD,IAAI,CAAEA,GAA7D,EADgE,EAAtC,CAA9B,CAIA;AACA,GAAMC,CAAAA,qBAAqB,CAAGJ,MAAM,CAACC,IAAP,CAAYL,iBAAZ,EAA+BM,GAA/B,CAAmC,SAAAG,OAAO,qBACvE,oBAAC,KAAD,EAAO,GAAG,CAAEA,OAAZ,CAAqB,IAAI,CAAET,iBAAiB,CAACS,OAAD,CAAjB,CAA2BC,EAAtD,CAA0D,MAAM,CAAE,gBAAC1B,KAAD,qBAAW,oBAAC,cAAD,kBAAoBA,KAApB,EAA2B,QAAQ,CAAEyB,OAArC,CAA8C,KAAK,CAAET,iBAArD,GAAX,EAAlE,EADuE,EAA1C,CAA9B,CAIA,mBACC,oBAAC,KAAD,CAAO,QAAP,mBACC,oBAAC,MAAD,EACC,YAAY,CAAE,KAAKb,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CADf,EADD,CAIEe,qBAJF,CAKEK,qBALF,CADD,CASA,C,+BAxD8B/B,KAAK,CAACkC,S,EA2DtC,cAAe5B,CAAAA,iBAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Filter from './FilterItems';\nimport PortfolioItem from './PortfolioItem';\nimport ProjectDisplay from './ProjectDisplay';\nimport { portfolioElements } from './Content';\n\n\nclass PortfolioAssemble extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfilter: ''\n\t\t};\n\n\t\tthis.filterUpdate = this.filterUpdate.bind(this);\n\n\t}\n\n\tfilterUpdate(event, type) {\n\n\t\tthis.setState({\n\t\t\tfilter: type\n\t\t})\n\t\n\t}\n\n\trender() {\n\n\t\t// Randomiser function\n\t\tconst shuffle = array => {\n\t\t\tfor (let i = array.length - 1; i > 0; i--) {\n\t\t\t\tlet j = Math.floor(Math.random() * (i + 1)); // Random index from 0 to i\n\n\t\t\t\t// Swap elements array[i] and array[j] (using destructing assignmnet)\n\t\t\t\t[array[i], array[j]] = [array[j], array[i]];\n\t\t\t}\n\t\t\treturn array;\n\t\t}\n\n\t\t// Randomise and filter (is applicable) the projects\n\t\tconst shuffledPortfolio = this.state.filter === 'All' ? shuffle(portfolioElements) : shuffle(portfolioElements).filter(work => work.type.includes(this.state.filter));\n\n\t\t// Map newly created projects array\n\t\tconst portfolioLinkAssembly = Object.keys(shuffledPortfolio).map(key => \n\t    \t<PortfolioItem key={key} item={shuffledPortfolio[key]} link={key} />\n\t\t)\n\n\t\t// Map corrisponding Routes for PorjectDisplay\n\t\tconst portfolioItemAssembly = Object.keys(shuffledPortfolio).map(element =>\n\t\t\t<Route key={element} path={shuffledPortfolio[element].id} render={(props) => <ProjectDisplay {...props} position={element} array={shuffledPortfolio} />} />\n\t\t)\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Filter\n\t\t\t\t\tfilterUpdate={this.filterUpdate.bind(this)}\n\t\t\t\t/>\n\t\t\t\t{portfolioLinkAssembly}\n\t\t\t\t{portfolioItemAssembly}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default PortfolioAssemble;"]},"metadata":{},"sourceType":"module"}